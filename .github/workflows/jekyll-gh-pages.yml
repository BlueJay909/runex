# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled + google site verification meta tag

on:
  # Runs on pushes targeting the default branch
  push:
    paths:
      - 'README.md'
      - 'docs/**'
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.  
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Setup Jekyll and Bundler directly without using predefined actions
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.2'  # Adjust to your required Ruby version

      - name: Install Jekyll and Bundler
        run: gem install jekyll bundler

      - name: Build site with Jekyll
        run: bundle exec jekyll build --destination _site

      - name: Inject Google Site Verification Meta Tag
        run: |
          META_TAG='<meta name="google-site-verification" content="JHllWTJvLmNSlis60cxpV1yj0JGRR5XcSqTLJE_A1ww" />'
          find ./_site -name "*.html" -exec sudo sed -i "s|</head>|$META_TAG\n</head>|g" {} +

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  # Deployment job        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
